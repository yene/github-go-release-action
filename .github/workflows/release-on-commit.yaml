# When version.txt is pushed, the commit body is used as release text.
name: Create release when version.txt updated

env:
  NAME: helloworld

on:
  push:
    branches:
      - main
      - master
    paths:
      - "version.txt"

jobs:
  build:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      # load the version from version.txt, and create a changelog from commits.
      # use whatever git tool you want to format the changelog, e.g. git log --pretty="- %s"
      # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - name: Set variables
        run: |
          VER=$(cat version.txt | tr -d '\n')
          echo "VERSION=$VER" >> $GITHUB_ENV
          git log --format=%B -n 1 HEAD | tail -n +3 > body.md
      - name: Build Linux
        run: env GOOS=linux GOARCH=amd64 go build -ldflags "-X main.buildVersion=$VERSION -X main.gitCommit=$GITHUB_SHA" -o ${NAME}-linux
      - name: UPX Linux
        uses: crazy-max/ghaction-upx@v2
        with:
          files: ${{env.NAME}}-linux

      - name: Build Linux arm
        # GOARM=6 (Raspberry Pi A, A+, B, B+, Zero) GOARM=7 (Raspberry Pi 2, 3)
        run: env GOARM=6 GOOS=linux GOARCH=arm go build -ldflags "-X main.buildVersion=$VERSION -X main.gitCommit=$GITHUB_SHA" -o ${NAME}-linux-arm
      - name: UPX Linux arm
        uses: crazy-max/ghaction-upx@v2
        with:
          files: ${{env.NAME}}-linux-arm

      - name: Build macOS amd64
        run: env GOOS=darwin GOARCH=amd64 go build -ldflags "-X main.buildVersion=$VERSION -X main.gitCommit=$GITHUB_SHA" -o ${NAME}-macos
      - name: UPX macOS amd64
        uses: crazy-max/ghaction-upx@v2
        with:
          files: ${{ env.NAME }}-macos

      - name: Build macOS arm64
        run: env GOOS=darwin GOARCH=arm64 go build -ldflags "-X main.buildVersion=$VERSION -X main.gitCommit=$GITHUB_SHA" -o ${NAME}-macos-arm
      - name: UPX macOS arm64
        uses: crazy-max/ghaction-upx@v2
        with:
          files: ${{ env.NAME }}-macos-arm

      - name: Build Windows
        run: env GOOS=windows GOARCH=amd64 go build -ldflags "-X main.buildVersion=$VERSION -X main.gitCommit=$GITHUB_SHA" -o ${NAME}-windows.exe
      - name: UPX Windows
        uses: crazy-max/ghaction-upx@v2
        with:
          files: ${{ env.NAME }}-windows.exe

      # https://github.com/ncipollo/release-action
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.NAME }}-*"
          tag: v${{ env.VERSION }}
          name: v${{ env.VERSION }}
          bodyFile: "body.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
